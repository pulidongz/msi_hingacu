# Generated by Django 3.0.3 on 2021-05-24 22:03

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DCPCollection',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('details', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'DCP Collection',
                'verbose_name_plural': 'DCP Collections (Business Process Models)',
            },
        ),
        migrations.CreateModel(
            name='ETLFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='etl')),
                ('task_id', models.CharField(max_length=32, null=True)),
                ('errors', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('status', models.IntegerField(choices=[(0, 'Queued'), (1, 'Failed'), (2, 'Completed'), (3, 'Processing')], default=0)),
                ('dcp_collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='etl.DCPCollection', verbose_name='Project/Component')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ETL File',
                'verbose_name_plural': 'ETL Files',
            },
        ),
        migrations.CreateModel(
            name='ETLFileRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('sheet_name', models.CharField(max_length=64)),
                ('sheet_slug', django_extensions.db.fields.AutoSlugField(allow_duplicates=True, blank=True, default=None, editable=False, null=True, populate_from='sheet_name')),
                ('number', models.IntegerField()),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('warnings', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('etlfile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='etl.ETLFile')),
            ],
            options={
                'verbose_name': 'ETL File Row Data',
                'verbose_name_plural': 'ETL File Row Data',
            },
        ),
        migrations.CreateModel(
            name='DataCapturePoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=10)),
                ('label', models.CharField(max_length=50)),
                ('sheet_name', models.CharField(max_length=50)),
                ('requirements', django.contrib.postgres.fields.jsonb.JSONField()),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='etl.DCPCollection')),
            ],
            options={
                'verbose_name': 'DCP',
                'verbose_name_plural': 'DCP Configurations',
            },
        ),
        migrations.AddIndex(
            model_name='datacapturepoint',
            index=models.Index(fields=['code', 'collection'], name='etl_datacap_code_c32061_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='datacapturepoint',
            unique_together={('code', 'collection')},
        ),
    ]
